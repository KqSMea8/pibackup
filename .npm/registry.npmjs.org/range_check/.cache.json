{"_id":"range_check","_rev":"17-d0bfa4e76ca51ba366595f9a5a0e89a9","name":"range_check","description":"This is a simple module to validate IP address, check ip address version, check if ip is within a range.","dist-tags":{"latest":"1.4.0"},"versions":{"0.0.1":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to vaildate IP address, check ip address version, check if ip is within a range.","version":"0.0.1","keywords":["IP Address","CIDR","V4","V6","vaild","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"0.1.1"},"repository":{"type":"git","url":"git://github.com/keverw/range_check.git"},"main":"range_check.js","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"_id":"range_check@0.0.1","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"f170586ba51f6e0db8e576f7cdeca617588c8131","tarball":"https://registry.npmjs.org/range_check/-/range_check-0.0.1.tgz"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"directories":{}},"0.0.2":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to vaildate IP address, check ip address version, check if ip is within a range.","version":"0.0.2","keywords":["IP Address","CIDR","V4","V6","vaild","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"0.1.1"},"repository":{"type":"git","url":"https://github.com/keverw/range_check"},"main":"range_check.js","bugs":{"url":"https://github.com/keverw/range_check/issues"},"_id":"range_check@0.0.2","dist":{"shasum":"4abd9f53859aae903e2985fee611ff59a5be5796","tarball":"https://registry.npmjs.org/range_check/-/range_check-0.0.2.tgz"},"_from":".","_npmVersion":"1.2.24","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"directories":{}},"0.0.3":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to vaildate IP address, check ip address version, check if ip is within a range.","version":"0.0.3","keywords":["IP Address","CIDR","V4","V6","vaild","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"0.1.1"},"repository":{"type":"git","url":"https://github.com/keverw/range_check"},"main":"range_check.js","bugs":{"url":"https://github.com/keverw/range_check/issues"},"_id":"range_check@0.0.3","dist":{"shasum":"1f9dc19a8f6b672d0c40174969f1e7825c0090d9","tarball":"https://registry.npmjs.org/range_check/-/range_check-0.0.3.tgz"},"_from":".","_npmVersion":"1.2.24","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"directories":{}},"0.0.4":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to validate IP address, check ip address version, check if ip is within a range.","version":"0.0.4","keywords":["IP Address","CIDR","V4","V6","valid","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"0.1.1"},"repository":{"type":"git","url":"https://github.com/keverw/range_check"},"main":"range_check.js","bugs":{"url":"https://github.com/keverw/range_check/issues"},"_id":"range_check@0.0.4","dist":{"shasum":"e86ef48f35078181b07a6f747d10995aa8154d88","tarball":"https://registry.npmjs.org/range_check/-/range_check-0.0.4.tgz"},"_from":".","_npmVersion":"1.2.24","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"directories":{}},"0.0.5":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to validate IP address, check ip address version, check if ip is within a range.","version":"0.0.5","keywords":["IP Address","CIDR","V4","V6","valid","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"0.1.1"},"repository":{"type":"git","url":"https://github.com/keverw/range_check"},"main":"range_check.js","gitHead":"f024adb590cff24451ecd47794bd098f3a95d581","bugs":{"url":"https://github.com/keverw/range_check/issues"},"homepage":"https://github.com/keverw/range_check","_id":"range_check@0.0.5","scripts":{},"_shasum":"6858ceb5f24be8513f96defac92ec32d0bb19fa5","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"dist":{"shasum":"6858ceb5f24be8513f96defac92ec32d0bb19fa5","tarball":"https://registry.npmjs.org/range_check/-/range_check-0.0.5.tgz"},"directories":{}},"1.1.0":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to validate IP address, check ip address version, check if ip is within a range.","version":"1.1.0","keywords":["IP Address","CIDR","V4","V6","valid","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"0.1.1"},"repository":{"type":"git","url":"git+https://github.com/keverw/range_check.git"},"main":"range_check.js","license":"BSD","gitHead":"2c475e41f6d77fa18ceab26257c828360700e982","bugs":{"url":"https://github.com/keverw/range_check/issues"},"homepage":"https://github.com/keverw/range_check#readme","_id":"range_check@1.1.0","scripts":{},"_shasum":"94bf9b95c437751cbfd0f993ff26d37a210e0364","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"dist":{"shasum":"94bf9b95c437751cbfd0f993ff26d37a210e0364","tarball":"https://registry.npmjs.org/range_check/-/range_check-1.1.0.tgz"},"directories":{}},"1.2.0":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to validate IP address, check ip address version, check if ip is within a range.","version":"1.2.0","keywords":["IP Address","CIDR","V4","V6","valid","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"1.0.3"},"repository":{"type":"git","url":"git+https://github.com/keverw/range_check.git"},"main":"range_check.js","license":"BSD","gitHead":"1b86aaa3b5d6f0adeb68e7fe106314a8c5d13a34","bugs":{"url":"https://github.com/keverw/range_check/issues"},"homepage":"https://github.com/keverw/range_check#readme","_id":"range_check@1.2.0","scripts":{},"_shasum":"b5fcfc5a7d0d43967529ce2cb90a6cf38c23339a","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"dist":{"shasum":"b5fcfc5a7d0d43967529ce2cb90a6cf38c23339a","tarball":"https://registry.npmjs.org/range_check/-/range_check-1.2.0.tgz"},"directories":{}},"1.3.0":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to validate IP address, check ip address version, check if ip is within a range.","version":"1.3.0","keywords":["IP Address","CIDR","V4","V6","valid","range","addr","ip","ipv4","ipv6"],"dependencies":{"ipaddr.js":"1.2"},"repository":{"type":"git","url":"git+https://github.com/keverw/range_check.git"},"publishConfig":{"registry":"https://registry.npmjs.org/"},"main":"range_check.js","license":"BSD","gitHead":"afe6fb4a344faab328b84ad0c9780fee563e2613","bugs":{"url":"https://github.com/keverw/range_check/issues"},"homepage":"https://github.com/keverw/range_check#readme","_id":"range_check@1.3.0","scripts":{},"_shasum":"05745e0125e07995e29e2f5bc8efaf904804bb03","_from":".","_npmVersion":"2.15.5","_nodeVersion":"4.4.5","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"dist":{"shasum":"05745e0125e07995e29e2f5bc8efaf904804bb03","tarball":"https://registry.npmjs.org/range_check/-/range_check-1.3.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/range_check-1.3.0.tgz_1469266600319_0.13072188710793853"},"directories":{}},"1.4.0":{"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"name":"range_check","description":"This is a simple module to validate IP address, check ip address version, check if ip is within a range.","version":"1.4.0","keywords":["IP Address","CIDR","V4","V6","valid","range","addr","ip","ipv4","ipv6"],"dependencies":{"ip6":"0.0.4","ipaddr.js":"1.2"},"repository":{"type":"git","url":"git+https://github.com/keverw/range_check.git"},"publishConfig":{"registry":"https://registry.npmjs.org/"},"main":"range_check.js","license":"BSD","gitHead":"a4a62e2ef101d6a2d3b161c27bd309133d38902b","bugs":{"url":"https://github.com/keverw/range_check/issues"},"homepage":"https://github.com/keverw/range_check#readme","_id":"range_check@1.4.0","scripts":{},"_shasum":"cd87c7ac62c40ba9df69b8703c604f60c3748635","_from":".","_npmVersion":"2.15.5","_nodeVersion":"4.4.5","_npmUser":{"name":"keverw","email":"keverw92@gmail.com"},"maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"dist":{"shasum":"cd87c7ac62c40ba9df69b8703c604f60c3748635","tarball":"https://registry.npmjs.org/range_check/-/range_check-1.4.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/range_check-1.4.0.tgz_1469278119866_0.1247682215180248"},"directories":{}}},"readme":"# Range Check v1.4.0\n[![npm version](https://badge.fury.io/js/range_check.svg)](https://badge.fury.io/js/range_check) &nbsp; [![Build Status](https://travis-ci.org/keverw/range_check.svg?branch=master)](https://travis-ci.org/keverw/range_check)\n\nThis is a simple module to validate IP address, check IP address version, check if IP is within a range.\n\nThis started out as `range_check` but it does much more than just checking ranges but since it's already got a large amount of downloads (37,115 downloads in the last month as of this writing) I'll keep the name the same even though I kinda want to change it to something better.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [Install](#install)\n- [IP Functions](#ip-functions)\n  - [Check if IP is valid](#check-if-ip-is-valid)\n  - [Check IP version](#check-ip-version)\n    - [Ver](#ver)\n    - [isV4](#isv4)\n    - [isV6](#isv6)\n  - [storeIP](#storeip)\n  - [searchIP](#searchip)\n  - [displayIP](#displayip)\n- [Range Functions](#range-functions)\n  - [Check if range is valid](#check-if-range-is-valid)\n  - [Check if IP is within range](#check-if-ip-is-within-range)\n- [Dependencies](#dependencies)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Install\n\nTo set up Range Check on your Node.js server use npm.\n\n`npm install range_check`\n\n## IP Functions\n### Check if IP is valid\n\n```js\nvar rangeCheck = require('range_check');\nconsole.log(rangeCheck.isIP('10.0.1.5')); //returns true or false\n```\n\n### Check IP version\n#### Ver\n```\nvar rangeCheck = require('range_check');\nconsole.log(rangeCheck.ver('10.0.1.5')); //returns 4\nconsole.log(rangeCheck.ver('2001:4860:8006::62')); //returns 6\nconsole.log(rangeCheck.ver('foo')); //returns 0 as invalid IP address\n```\n\n#### isV4\n```js\nvar rangeCheck = require('range_check');\n\nconsole.log(rangeCheck.isV4('10.0.1.5')); //true\nconsole.log(rangeCheck.isV4('foo')); //false\nconsole.log(rangeCheck.isV4('123::123')); //false\n```\n\n#### isV6\n```js\nvar rangeCheck = require('range_check');\n\nconsole.log(rangeCheck.isV6('123::123')); //true\nconsole.log(rangeCheck.isV6('foo')); //false\nconsole.log(rangeCheck.isV6('10.0.1.5')); //false\n```\n\n### storeIP\nThis function is useful to get a consistent IP address such for storing it in a database or when searching in a database after being stored using this. So if a V6 address was sent compacted or not, or if you searched by either version this function would make sure you get a consistent IP address for both versions. Also the possibly of saving a few bytes.\n\nIf an V6 addressed mapped as v4 is given it will convert it to V4, If any other V6 address is given it is __abbreviated__ and plain V4 addresses are left alone. Returns null if a invalid IP\n\n```js\nvar rangeCheck = require('../range_check.js');\n\nconsole.log(rangeCheck.storeIP('foo')); //null\nconsole.log(rangeCheck.storeIP('::ffff:127.0.0.1')); //127.0.0.1\nconsole.log(rangeCheck.storeIP('2001:0000:0111:0000:0011:0000:0001:0000')); //2001:0:111:0:11:0:1:0\nconsole.log(rangeCheck.storeIP('2001:0001:0000:0001:0000:0000:0000:0000')); //2001:1:0:1::\nconsole.log(rangeCheck.storeIP('0000:0000:0000:0000:0000:0000:0000:0000')); //::\nconsole.log(rangeCheck.storeIP('0000:0000:0000:0000:0000:0000:0000:0001')); //::1\nconsole.log(rangeCheck.storeIP('2041:0000:140F:0000:0000:0000:875B:131B')); //2041:0:140F::875B:131B\nconsole.log(rangeCheck.storeIP('2001:0001:0002:0003:0004:0005:0006:0007')); //2001:1:2:3:4:5:6:7\nconsole.log(rangeCheck.storeIP('127.0.0.1')); //127.0.0.1\n```\n\n### searchIP\nSame function as `storeIP`, just a clearer name when you are using it for search instead\n\n### displayIP\nThis function is useful for displaying IP addresses, such as after grabbing it back from the database when using `storeIP`\n\nIf an V6 addressed mapped as v4 is given it will convert it to V4, If any other V6 address is given it is __normalized__ into the longer version and plain V4 addresses are left alone. Returns a empty string if a invalid IP\n\n```js\nvar rangeCheck = require('../range_check.js');\n\nconsole.log(rangeCheck.displayIP(null)); // ''\nconsole.log(rangeCheck.displayIP('::ffff:127.0.0.1')); //'127.0.0.1'\nconsole.log(rangeCheck.displayIP('2001:0:111:0:11:0:1:0')); //'2001:0000:0111:0000:0011:0000:0001:0000'\nconsole.log(rangeCheck.displayIP('2001:1:0:1::')); //'2001:0001:0000:0001:0000:0000:0000:0000'\nconsole.log(rangeCheck.displayIP('::')); //'0000:0000:0000:0000:0000:0000:0000:0000'\nconsole.log(rangeCheck.displayIP('::1')); //'0000:0000:0000:0000:0000:0000:0000:0001'\nconsole.log(rangeCheck.displayIP('2041:0:140F::875B:131B')); //'2041:0000:140F:0000:0000:0000:875B:131B'\nconsole.log(rangeCheck.displayIP('2001:1:2:3:4:5:6:7')); //'2001:0001:0002:0003:0004:0005:0006:0007'\nconsole.log(rangeCheck.displayIP('127.0.0.1')); //'127.0.0.1'\n\n```\n\n## Range Functions\n\n### Check if range is valid\n\nYou can use isRange if you want to validate an entire range.\n\n```js\nvar rangeCheck = require('range_check');\n\nconsole.log(rangeCheck.isRange('2001:db8::/32')); //true\nconsole.log(rangeCheck.isRange('10.0.0.0/8')); // true\nconsole.log(rangeCheck.isRange('qwerty')); // false\n\n```\n\n### Check if IP is within range\n```js\nvar rangeCheck = require('range_check');\nconsole.log(rangeCheck.inRange('10.0.1.5', '10.0.0.0/8')); //returns true\n\nconsole.log(rangeCheck.inRange('192.0.1.5', '10.0.0.0/8')); //returns false\n\nconsole.log(rangeCheck.inRange('2001:db8:1234::1', '2001:db8::/32')); //returns true\n```\n\nYou can also give a list of ranges\n\n```js\nvar rangeCheck = require('range_check');\nconsole.log(rangeCheck.inRange('192.168.1.1', ['10.0.0.0/8', '192.0.0.0/8'])); //returns true\n\n```\n\n## Dependencies\n* ipaddr.js - [https://github.com/whitequark/ipaddr.js](https://github.com/whitequark/ipaddr.js)\n* ip6 - [https://github.com/elgs/ip6](https://github.com/elgs/ip6)\n","maintainers":[{"name":"keverw","email":"keverw92@gmail.com"}],"time":{"modified":"2016-07-23T12:48:41.880Z","created":"2012-05-25T00:29:54.163Z","0.0.1":"2012-05-25T00:30:00.273Z","0.0.2":"2013-06-18T10:05:23.190Z","0.0.3":"2013-06-21T23:44:35.350Z","0.0.4":"2013-06-21T23:49:05.863Z","0.0.5":"2014-12-04T07:25:58.865Z","1.1.0":"2015-10-26T08:53:13.600Z","1.2.0":"2015-10-26T11:31:40.650Z","1.3.0":"2016-07-23T09:36:42.360Z","1.4.0":"2016-07-23T12:48:41.880Z"},"author":{"name":"Kevin Whitman","url":"https://github.com/keverw"},"repository":{"type":"git","url":"git+https://github.com/keverw/range_check.git"},"homepage":"https://github.com/keverw/range_check#readme","keywords":["IP Address","CIDR","V4","V6","valid","range","addr","ip","ipv4","ipv6"],"bugs":{"url":"https://github.com/keverw/range_check/issues"},"readmeFilename":"readme.md","license":"BSD","users":{"kolomiichenko":true,"vvinder":true},"_attachments":{},"_etag":"W/\"579367a9-4062\"","_lastModified":"Sat, 23 Jul 2016 12:48:41 GMT"}